"""This is the implementation of the central directory header

This implements the central directory call and methods
"""


class CentralDirectoryHeader:
    """ A class used to represent a Central Director Header
    """

    def __init__(self, original_header) -> None:
        """

        Args:
            original_header (str): The original version of this header
        """
        # print(f'makeing a new header {original_header}')
        self.original_header = original_header
        # self.file_name_length = _get_header_field(original_header, )

        # centralDirectoryHeaderSig = original_header[0*2:4*2]
        # # print(centralDirectoryHeaderSig)
        # self.file_name_length = original_header[28*2:30*2]
        # # print(self.file_name_length)
        # self.file_name_length = _hex_to_int(self.file_name_length)
        # # print(self.file_name_length)
        # # print(_hex_to_int(_get_header_field(original_header, 28, 2)))
        # self.local_file_header_relative_offset = _hex_to_int(
        #     original_header[42*2:46*2])
        # # print(self.local_file_header_relative_offset)

        # # print(_hex_to_int(self.local_file_header_relative_offset))
        # self.file_name = original_header[46*2:46*2+self.file_name_length*2]
        # print(_hex_to_str(self.file_name))
        # print(_hex_to_str(_get_header_field(
        # original_header, 46, self.file_name_length)))

        # print(int(self.file_name_length, 16))
        # print(bytearray.fromhex(self.file_name_length))
        # print(int('0009', 16))
        # print(int('0x1e000000', 0))
        # print(int('0000001e', 16))
        # print(int('beef', 16))
