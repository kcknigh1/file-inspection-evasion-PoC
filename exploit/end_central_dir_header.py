"""This is the implementation of the end of central directory header
"""
from . import utils


class EndCentralDirectoryHeader:
    """Class that represents the end central directory header"""

    def __init__(self, header_hex) -> None:
        """Pulls some of the useful fields from the header

        Args:
            header_hex (str): The string version of the header in hex

        """
        self._header_hex = header_hex
        self._num_central_dir_records = utils.hex_to_int(
            utils.get_header_field(header_hex, 8, 2))
        self._size_central_dir_bytes = utils.hex_to_int(
            utils.get_header_field(header_hex, 12, 4))
        self._offset_start_central_dir_from_start = utils.hex_to_int(
            utils.get_header_field(header_hex, 16, 4))
        self._comment_length = utils.hex_to_int(
            utils.get_header_field(header_hex, 20, 2))

    def get_header_hex(self):
        return self._header_hex

    def get_num_central_dir_records(self):
        return self._num_central_dir_records

    def get_size_central_dir_bytes(self):
        return self._size_central_dir_bytes

    def get_offset_start_central_dir_from_start(self):
        return utils.hex_to_int(
            utils.get_header_field(self._header_hex, 16, 4))
        # return self._offset_start_central_dir_from_start

    def shift_start_central_dir_start_offset(self, shift_by):
        # old + shift
        new_offset = self.get_offset_start_central_dir_from_start() + shift_by
        # print(new_offset)
        # print(self._header_hex)
        self._header_hex = utils.int_to_hex(new_offset, 4).join(
            [self._header_hex[:16*2], self._header_hex[20*2:]])
        # print(self._header_hex)
